<?xml version="1.0" encoding="utf-16"?><Root Id="afb739da-606f-42ff-bfea-6d1b13804840" Version="1.2" TestModule="" ImplementModule=""><Module NameWord="TriangleF"><Import NameWord="PointF"></Import><NullOperator KeyWord=""></NullOperator><NullOperator KeyWord=""></NullOperator><Record VisibilityWord="Public" NameWord="Triangle" TypeWord="1«Object"><Field NameWord="point1" VisibilityWord="Private" TypeWord="1«PointF.Point"></Field><Field NameWord="point2" VisibilityWord="Private" TypeWord="1«PointF.Point"></Field><Field NameWord="point3" VisibilityWord="Private" TypeWord="1«PointF.Point"></Field><NullOperator KeyWord=""></NullOperator><NullOperator KeyWord=""></NullOperator><MethodProcedure VisibilityWord="Public" ClassParameter="Triangle this" ParametersWord="In¤1«PointF.Point¤point1®In¤1«PointF.Point¤point2®In¤1«PointF.Point¤point3" NameWord="Init"><Assign RightValue="Operand§point1¶" LeftValue="Operand§this¶Dot§.¶Operand§point1¶"></Assign><Assign RightValue="Operand§point2¶" LeftValue="Operand§this¶Dot§.¶Operand§point2¶"></Assign><Assign RightValue="Operand§point3¶" LeftValue="Operand§this¶Dot§.¶Operand§point3¶"></Assign></MethodProcedure><NullOperator KeyWord=""></NullOperator><MethodProcedure VisibilityWord="Public" ClassParameter="Triangle this" ParametersWord="In¤1«Real¤x1®In¤1«Real¤y1®In¤1«Real¤x2®In¤1«Real¤y2®In¤1«Real¤x3®In¤1«Real¤y3" NameWord="Init2"><Variable TypeWord="1«PointF.Point" NameWord="point1"></Variable><Variable TypeWord="1«PointF.Point" NameWord="point2"></Variable><Variable TypeWord="1«PointF.Point" NameWord="point3"></Variable><Call Expression="Operand§point1¶Dot§.¶Function§Init¶LeftFuncBracket§(¶Operand§x1¶Comma§,¶Space§ ¶Operand§y1¶RightFuncBracket§)¶"></Call><Call Expression="Operand§point2¶Dot§.¶Function§Init¶LeftFuncBracket§(¶Operand§x2¶Comma§,¶Space§ ¶Operand§y2¶RightFuncBracket§)¶"></Call><Call Expression="Operand§point3¶Dot§.¶Function§Init¶LeftFuncBracket§(¶Operand§x3¶Comma§,¶Space§ ¶Operand§y3¶RightFuncBracket§)¶"></Call><Call Expression="Operand§this¶Dot§.¶Function§Init¶LeftFuncBracket§(¶Operand§point1¶Comma§,¶Space§ ¶Operand§point2¶Comma§,¶Space§ ¶Operand§point3¶RightFuncBracket§)¶"></Call></MethodProcedure><NullOperator KeyWord=""></NullOperator><MethodProcedure VisibilityWord="Public" ClassParameter="Triangle this" ParametersWord="In¤1«PointF.Point¤point1®In¤1«PointF.Point¤point2®In¤1«PointF.Point¤point3" NameWord="setPoints"><Call Expression="Operand§this¶Dot§.¶Function§Init¶LeftFuncBracket§(¶Operand§point1¶Comma§,¶Space§ ¶Operand§point2¶Comma§,¶Space§ ¶Operand§point3¶RightFuncBracket§)¶"></Call></MethodProcedure><NullOperator KeyWord=""></NullOperator><MethodFunction VisibilityWord="Public" ClassParameter="Triangle this" TypeWord="1«PointF.Point" ParametersWord="" NameWord="getPoint1"><Return Expression="Operand§this¶Dot§.¶Operand§point1¶"></Return></MethodFunction><NullOperator KeyWord=""></NullOperator><MethodFunction VisibilityWord="Public" ClassParameter="Triangle this" TypeWord="1«PointF.Point" ParametersWord="" NameWord="getPoint2"><Return Expression="Operand§this¶Dot§.¶Operand§point2¶"></Return></MethodFunction><NullOperator KeyWord=""></NullOperator><MethodFunction VisibilityWord="Public" ClassParameter="Triangle this" TypeWord="1«PointF.Point" ParametersWord="" NameWord="getPoint3"><Return Expression="Operand§this¶Dot§.¶Operand§point3¶"></Return></MethodFunction><NullOperator KeyWord=""></NullOperator><MethodFunction VisibilityWord="Public" ClassParameter="Triangle this" TypeWord="1«Boolean" ParametersWord="" NameWord="isEquilateral"><NullOperator KeyWord=""></NullOperator><If Expression="Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Dot§.¶Function§getDistance¶LeftFuncBracket§(¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Comma§,¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint2¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶Space§ ¶BinaryOperation§EqualOperation¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Dot§.¶Function§getDistance¶LeftFuncBracket§(¶Operand§this¶Dot§.¶Function§getPoint2¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Comma§,¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint3¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶" IsCollapsed="True"><Comment TextBody="{\rtf1\ansi\ansicpg1252\uc1\htmautsp\deff2{\fonttbl{\f0\fcharset0 Times New Roman;}{\f2\fcharset0 Verdana;}}{\colortbl;\red255\green255\blue255;\red0\green100\blue0;}\loch\hich\dbch\pard\plain\ltrpar\itap0{\lang1033\fs24\f2\cf0 \cf0\ql{\f2 {\lang1049\cf2\ltrch cout &lt;&lt; &quot;1 error &quot;;}\li0\ri0\sa0\sb0\fi0\ql\par}&#xD;&#xA;}&#xD;&#xA;}"></Comment><Return Expression="Operand§истина¶"></Return></If><ElseIf Expression="Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Dot§.¶Function§getDistance¶LeftFuncBracket§(¶Operand§this¶Dot§.¶Function§getPoint2¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Comma§,¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint3¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶Space§ ¶BinaryOperation§EqualOperation¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Dot§.¶Function§getDistance¶LeftFuncBracket§(¶Operand§this¶Dot§.¶Function§getPoint3¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Comma§,¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶"><Comment TextBody="{\rtf1\ansi\ansicpg1252\uc1\htmautsp\deff2{\fonttbl{\f0\fcharset0 Times New Roman;}{\f2\fcharset0 Verdana;}}{\colortbl;\red255\green255\blue255;\red0\green100\blue0;}\loch\hich\dbch\pard\plain\ltrpar\itap0{\lang1033\fs24\f2\cf0 \cf0\ql{\f2 {\lang1049\cf2\ltrch cout &lt;&lt; this.getPoint1().getDistance(this.getPoint3(), this.getPoint2());}\li0\ri0\sa0\sb0\fi0\ql\par}&#xD;&#xA;}&#xD;&#xA;}"></Comment><Comment TextBody="{\rtf1\ansi\ansicpg1252\uc1\htmautsp\deff2{\fonttbl{\f0\fcharset0 Times New Roman;}{\f2\fcharset0 Verdana;}}{\colortbl;\red255\green255\blue255;\red0\green100\blue0;}\loch\hich\dbch\pard\plain\ltrpar\itap0{\lang1033\fs24\f2\cf0 \cf0\ql{\f2 {\lang1049\cf2\ltrch cout &lt;&lt; this.getPoint1().getDistance(this.point1, this.point3);}\li0\ri0\sa0\sb0\fi0\ql\par}&#xD;&#xA;}&#xD;&#xA;}"></Comment><Return Expression="Operand§истина¶"></Return></ElseIf><ElseIf Expression="Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Dot§.¶Function§getDistance¶LeftFuncBracket§(¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Comma§,¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint2¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶Space§ ¶BinaryOperation§EqualOperation¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Dot§.¶Function§getDistance¶LeftFuncBracket§(¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Comma§,¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint3¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶"><Return Expression="Operand§истина¶"></Return></ElseIf><Return Expression="Operand§ложь¶"></Return></MethodFunction><NullOperator KeyWord=""></NullOperator><MethodFunction VisibilityWord="Public" ClassParameter="Triangle this" TypeWord="1«Real" ParametersWord="" NameWord="getPerimeter"><NullOperator KeyWord=""></NullOperator><Return Expression="Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Dot§.¶Function§getDistance¶LeftFuncBracket§(¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Comma§,¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint2¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶Space§ ¶BinaryOperation§PlusOperation¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Dot§.¶Function§getDistance¶LeftFuncBracket§(¶Operand§this¶Dot§.¶Function§getPoint2¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Comma§,¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint3¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶Space§ ¶BinaryOperation§PlusOperation¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Dot§.¶Function§getDistance¶LeftFuncBracket§(¶Operand§this¶Dot§.¶Function§getPoint3¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Comma§,¶Space§ ¶Operand§this¶Dot§.¶Function§getPoint1¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶"></Return></MethodFunction><NullOperator KeyWord=""></NullOperator></Record></Module><Beginning><NullOperator KeyWord=""></NullOperator></Beginning></Root>