<?xml version="1.0" encoding="utf-16"?><Root Id="57ba813e-e02e-49a2-a173-fd6ba1334147" Version="1.2" TestModule="" ImplementModule=""><Module NameWord="PointF"><Import NameWord="Math"></Import><Record VisibilityWord="Public" NameWord="Point" TypeWord="1«Object"><Field NameWord="x" VisibilityWord="Private" TypeWord="1«Real"></Field><Field NameWord="y" VisibilityWord="Private" TypeWord="1«Real"></Field><NullOperator KeyWord=""></NullOperator><MethodProcedure VisibilityWord="Public" ClassParameter="Point this" ParametersWord="In¤1«Real¤x®In¤1«Real¤y" NameWord="Init"><Assign RightValue="Operand§x¶" LeftValue="Operand§this¶Dot§.¶Operand§x¶"></Assign><Assign RightValue="Operand§y¶" LeftValue="Operand§this¶Dot§.¶Operand§y¶"></Assign></MethodProcedure><MethodFunction VisibilityWord="Public" ClassParameter="Point this" TypeWord="1«Real" ParametersWord="" NameWord="X"><Return Expression="Operand§this¶Dot§.¶Operand§x¶"></Return></MethodFunction><MethodFunction VisibilityWord="Public" ClassParameter="Point this" TypeWord="1«Real" ParametersWord="" NameWord="Y"><Return Expression="Operand§this¶Dot§.¶Operand§y¶"></Return></MethodFunction><MethodProcedure VisibilityWord="Public" ClassParameter="Point this" ParametersWord="In¤1«Real¤x" NameWord="setX"><Assign RightValue="Operand§x¶" LeftValue="Operand§this¶Dot§.¶Operand§x¶"></Assign></MethodProcedure><MethodProcedure VisibilityWord="Public" ClassParameter="Point this" ParametersWord="In¤1«Real¤y" NameWord="setY"><Assign RightValue="Operand§y¶" LeftValue="Operand§this¶Dot§.¶Operand§y¶"></Assign></MethodProcedure><MethodFunction VisibilityWord="Public" ClassParameter="Point this" TypeWord="1«Real" ParametersWord="In¤1«Point¤p1®In¤1«Point¤p2" NameWord="getDistance"><Return Expression="LeftBracket§(¶Operand§Math¶Dot§.¶Function§Sqrt¶LeftFuncBracket§(¶Operand§Math¶Dot§.¶Function§Pow¶LeftFuncBracket§(¶LeftBracket§(¶Operand§p2¶Dot§.¶Function§X¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Space§ ¶BinaryOperation§MinusOperation¶Space§ ¶Operand§p1¶Dot§.¶Function§X¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightBracket§)¶Comma§,¶Space§ ¶Operand§2¶RightFuncBracket§)¶Space§ ¶BinaryOperation§PlusOperation¶Space§ ¶Operand§Math¶Dot§.¶Function§Pow¶LeftFuncBracket§(¶LeftBracket§(¶Operand§p2¶Dot§.¶Function§Y¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Space§ ¶BinaryOperation§MinusOperation¶Space§ ¶Operand§p1¶Dot§.¶Function§Y¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightBracket§)¶Comma§,¶Space§ ¶Operand§2¶RightFuncBracket§)¶RightFuncBracket§)¶RightBracket§)¶"></Return></MethodFunction><MethodFunction VisibilityWord="Public" ClassParameter="Point this" TypeWord="1«Boolean" ParametersWord="In¤1«Point¤a2" NameWord="isEqual"><If Expression="LeftBracket§(¶LeftBracket§(¶Operand§Math¶Dot§.¶Function§Fabs¶LeftFuncBracket§(¶Operand§a2¶Dot§.¶Function§X¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Space§ ¶BinaryOperation§MinusOperation¶Space§ ¶Operand§this¶Dot§.¶Function§X¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶Space§ ¶BinaryOperation§LessOperation¶Space§ ¶Operand§0.00000001¶RightBracket§)¶RightBracket§)¶Space§ ¶BinaryOperation§AndOperation¶Space§ ¶LeftBracket§(¶LeftBracket§(¶Operand§Math¶Dot§.¶Function§Fabs¶LeftFuncBracket§(¶Operand§a2¶Dot§.¶Function§Y¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Space§ ¶BinaryOperation§MinusOperation¶Space§ ¶Operand§this¶Dot§.¶Function§Y¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶Space§ ¶BinaryOperation§LessOperation¶Space§ ¶Operand§0.000000001¶RightBracket§)¶RightBracket§)¶"><Return Expression="Operand§истина¶"></Return></If><Return Expression="Operand§ложь¶"></Return></MethodFunction><NullOperator KeyWord=""></NullOperator><MethodFunction VisibilityWord="Public" ClassParameter="Point this" TypeWord="1«Point" ParametersWord="In¤1«Point¤point1®In¤1«Point¤point2" NameWord="PointPlusPoint"><NullOperator KeyWord=""></NullOperator><Variable TypeWord="1«Point" NameWord="p"></Variable><Call Expression="Operand§p¶Dot§.¶Function§Init¶LeftFuncBracket§(¶Operand§point1¶Dot§.¶Function§X¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Space§ ¶BinaryOperation§PlusOperation¶Space§ ¶Operand§point2¶Dot§.¶Function§X¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Comma§,¶Space§ ¶Operand§point1¶Dot§.¶Function§Y¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶Space§ ¶BinaryOperation§PlusOperation¶Space§ ¶Operand§point2¶Dot§.¶Function§Y¶LeftFuncBracket§(¶Operand§¶RightFuncBracket§)¶RightFuncBracket§)¶"></Call><Return Expression="Operand§p¶"></Return></MethodFunction></Record></Module><Beginning><NullOperator KeyWord=""></NullOperator></Beginning></Root>